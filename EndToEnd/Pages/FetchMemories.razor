@page "/FetchMemories"
@using EndToEnd.Data
@using EndToEndDB.Data.EndToEnd
@inject AuthenticationStateProvider AuthenticationStateProvider
@inherits OwningComponentBase<MemoriesService>

<h1>Memories Review</h1>
<!-- AuthorizeView allows us to only show sections of the page -->
<!-- based on the security on the current user -->
<AuthorizeView>
    <!-- Show this section if the user is logged in -->
    <Authorized>
        <h4>Hello, @context.User.Identity.Name!</h4>
        @if (memories == null)
        {
            <!-- Show this if the current user has no data... yet... -->
            <p><em>Loading...</em></p>
        }
        else
        {
            <!-- Show the forecasts for the current user -->
            <table class="table">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Type</th>
                        <th>Text</th>

                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var memories in memories)
                    {
                        <tr>
                            <td>@memories.memDate.Value.ToShortDateString()</td>
                            <td>@memories.memType</td>
                            <td>@memories.memText</td>

                            <td>
                                <!-- Edit the current forecast -->
                                <button class="btn btn-primary"
                                        @onclick="(() => EditMemories(memories))">
                                    Edit
                                </button>
                            </td>
                            <td>
                                <button class="btn btn-primary"
                                        @onclick="DeleteMemories">
                                    Delete
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <p>
                <!-- Add a new forecast -->
                <button class="btn btn-primary"
                        @onclick="AddNewMemory">
                    Add New Memory
                </button>
            </p>


            @if (ShowPopup)
            {
                <!-- This is the popup to create or edit a forecast -->
                <div class="modal" tabindex="-1" style="display:block" role="dialog">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h3 class="modal-title">Edit Memories</h3>
                                <!-- Button to close the popup -->
                                <button type="button" class="close"
                                        @onclick="ClosePopup">
                                    <span aria-hidden="true">X</span>
                                </button>
                            </div>
                            <!-- Edit form for the current forecast -->
                            <div class="modal-body">
                                @*<select class="form-control"
                                            placeholder="Memories Type"
                                            @bind="objMemories.memType">
                                    </select>*@
                                <select id="select-box" bind="@TypeOfMemories">
                                    <option value=@MemType.family>@MemType.family.ToString()</option>
                                    <option value=@MemType.job>@MemType.job.ToString()</option>
                                    <option value=@MemType.Social>@MemType.Social.ToString()</option>
                                    <option value=@MemType.Travel>@MemType.Travel.ToString()</option>
                                    <option value=@MemType.Others>@MemType.Others.ToString()</option>
                                </select>
                                <input class="form-control" type="text"
                                       placeholder="Text of Memory"
                                       @bind="objMemories.memText" />
                                @*<input class="form-control" type="text"
                                       placeholder="Summary"
                                       @bind="objMemories.memDate" />
                                <br />*@
                                <!-- Button to save the forecast -->
                                <button class="btn btn-primary"
                                        @onclick="SaveMemory">
                                    Save
                                </button>
                                <!-- Only show delete button if not a new record -->
                                @* @if (objWeatherForecast.Id > 0)
                                    {
                                         <!-- Button to delete the forecast -->

                                     }*@
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </Authorized>
    <!-- Show this section if the user is not logged in -->
    <NotAuthorized>
        <p>You're not signed in.</p>
    </NotAuthorized>
</AuthorizeView>
@functions {
     public enum MemType
    {
       
        family=0,
       
        job=1,
        
        Social = 2,
        
        Travel = 3,
        
        Others =4

    }
  
    private MemType TypeOfMemories { get; set; } = MemType.family;

   
}

